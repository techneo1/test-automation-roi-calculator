{"version":3,"sources":["CalculatorForm/CalculatorForm.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["CalculatorForm","className","htmlFor","type","id","aria-label","placeholder","App","data","legend","prefix","thousands","dataset","borderColor","pointBackgroundColor","pointBorderColor","pointStyle","min","max","step","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c2b59ce.chunk.js","sourcesContent":["export default function CalculatorForm() {\n    return (\n        <form>\n            <div className=\"form-group\">\n                <label htmlFor=\"totalManHours\">How much total time(man hours) is spent to execute tests(Regression, Smoke etc.) manually/execution in hours?</label>\n\n                <div className=\"input-group\">\n                    <input type=\"text\" className=\"form-control\"\n                        id=\"totalManHours\" aria-label=\"l Man hours\"\n                        placeholder=\"Enter Total Man hours to execute tests\" />\n\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\">hours</span>\n                    </div>\n                </div>\n\n                {/* <small id=\"totalManHoursHelp\" className=\"form-text text-muted\">Total Time(Man Hours) to execute tests(Regression, Smoke etc.) manually/execution in hours</small> */}\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"costOfResourceInEuros\">How much do you pay for each resource per hour?</label>\n\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">€</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\"\n                        id=\"costOfResourceInEuros\" aria-label=\"Cost/Hr of 1 resource in Euros\"\n                        placeholder=\"Enter Cost/Hr of 1 resource\" />\n\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\">EUR</span>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"automationConsultingCost\">How much do you spend on automation consulting per year?</label>\n\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">€</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\"\n                        id=\"automationConsultingCost\" aria-label=\"Automation Consulting Cost\"\n                        placeholder=\"Enter Automation Consulting Cost\" />\n\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\">EUR</span>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"infrastructureCostsPerYear\">How much do you spend on infrastructure per year?</label>\n\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">€</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\"\n                        id=\"infrastructureCostsPerYear\" aria-label=\"Infrastructure Costs/Year\"\n                        placeholder=\"Enter Infrastructure Costs/Year\" />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\">EUR</span>\n                    </div>\n                </div>\n            </div>\n\n            {/* <div className=\"form-group\">\n                <label htmlFor=\"totalNumberOfTests\">How much tests do you have?</label>\n                <input id=\"totalNumberOfTests\" type=\"number\" className=\"form-control\" min=\"500\" max=\"10000\" step=\"500\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"numberOfReleasesPerYear\">How many number of releases do you have per year?</label>\n                <input id=\"numberOfReleasesPerYear\" type=\"number\" className=\"form-control\" min=\"5\" max=\"100\" step=\"5\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"numberOfCheckinsPerDay\">How many number of checkins do you have per day?</label>\n                <input id=\"numberOfCheckinsPerDay\" type=\"number\" className=\"form-control\" min=\"1\" max=\"50\" step=\"1\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"numberOfCrossPlatforms\">How many cross browser/platform devices do you support?</label>\n                <input id=\"numberOfCrossPlatforms\" type=\"number\" className=\"form-control\" min=\"1\" max=\"10\" step=\"1\" />\n            </div> */}\n\n            <div className=\"form-group text-center\">\n                <button type=\"submit\" className=\"btn btn-lg col-md-6 mx-auto\">Calculate results</button>\n            </div>\n        </form>\n    )\n}","import { LineChart } from 'react-chartkick'\nimport 'chart.js'\nimport './App.scss';\nimport CalculatorForm from './CalculatorForm/CalculatorForm';\n\nexport default function App() {\n  const savingsChartData = [\n    { \"name\": \"Total Savings due to Automation\", \"data\": { \"now\": 0, \"1 years\": 160000, \"2 years\": 240000, \"3 years\": 320000 } }\n  ];\n\n  const roiChartData = [\n    { \"name\": \"Effective ROI\", \"data\": { \"now\": 0, \"1 years\": 43, \"2 years\": 114, \"3 years\": 186 } }\n  ];\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center m-4\">Test Automation ROI Calculator</h1>\n      <div className=\"row mb-5\">\n        <div className=\"col-md-2\"></div>\n        <div className=\"col-12 col-md-9 col-xl-8 center\">\n          <div className=\"card form\">\n            <div className=\"card-body\">\n              <CalculatorForm />\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div className=\"row card-deck my-5\">\n        <div className=\"col-sm-12 col-md-4\">\n          <div className=\"card-body text-center\">\n            <h1 className=\"card-title\"><em>€</em> 320,000</h1>\n            <h3 className=\"card-title\">Savings<sup>*</sup></h3>\n            <LineChart\n              data={savingsChartData}\n              legend=\"bottom\"\n              prefix=\"€\"\n              thousands=\",\"\n              dataset={{ borderColor: \"#ff5000\", pointBackgroundColor: \"#777777\", pointBorderColor: \"#777777\", pointStyle: \"rectRounded\" }}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-sm-12 col-md-4\">\n          <div className=\"card-body text-center\">\n            <h1 className=\"card-title\">186</h1>\n            <h3 className=\"card-title\">ROI<sup>*</sup></h3>\n            <LineChart\n              data={roiChartData}\n              legend=\"bottom\"\n              dataset={{ borderColor: \"#498fab\", pointBackgroundColor: \"#777777\", pointBorderColor: \"#777777\", pointStyle: \"rectRounded\" }}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-sm-12 col-md-4\">\n          <div className=\"card-body\">\n\n            <div className=\"form-group\">\n              <label htmlFor=\"totalNumberOfTests\">Number of tests</label>\n              <input id=\"totalNumberOfTests\" type=\"number\" className=\"form-control\" min=\"500\" max=\"10000\" step=\"500\" />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"numberOfCrossPlatforms\">Number of supported cross browser/platform devices</label>\n              <input id=\"numberOfCrossPlatforms\" type=\"number\" className=\"form-control\" min=\"1\" max=\"10\" step=\"1\" />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"numberOfReleasesPerYear\">Number of releases / year</label>\n              <input id=\"numberOfReleasesPerYear\" type=\"number\" className=\"form-control\" min=\"5\" max=\"100\" step=\"5\" />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"numberOfCheckinsPerDay\">Number of checkins / day</label>\n              <input id=\"numberOfCheckinsPerDay\" type=\"number\" className=\"form-control\" min=\"1\" max=\"50\" step=\"1\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}